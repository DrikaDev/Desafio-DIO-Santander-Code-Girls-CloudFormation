AWSTemplateFormatVersion: "2010-09-09"
Description: "Fluxo: Usuario -> S3 -> Lambda -> EC2 (com EBS) -> Usuario"

Resources:
  # (3) Bucket S3 para upload dos arquivos
  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: bucket-dio-santander
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: "s3:ObjectCreated:*"
            Function: !GetAtt MyLambdaFunction.Arn

  # (4) Função Lambda que será acionada pelo S3
  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: MyLambdaProcessFile
      Runtime: python3.9
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import boto3
          def handler(event, context):
              print("Arquivo recebido:", event)
              # Aqui entraria a lógica de validação
              return {"status": "processado"}

  # Permissão para o S3 acionar a Lambda
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref MyLambdaFunction
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt MyS3Bucket.Arn

  # (5) Instância EC2 que vai processar dados vindos da Lambda
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0c55b159cbfafe1f0  
      KeyName: my-key-pair     # Necessário já existir!
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          Ebs:
            VolumeSize: 8
      SecurityGroupIds:
        - !Ref MyEC2SecurityGroup

  # (6) Volume EBS extra para armazenar dados do processamento
  MyEBSVolume:
    Type: AWS::EC2::Volume
    Properties:
      AvailabilityZone: !GetAtt MyEC2Instance.AvailabilityZone
      Size: 20
      VolumeType: gp2

  # Associação do volume EBS ao EC2
  MyEBSAttachment:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref MyEC2Instance
      VolumeId: !Ref MyEBSVolume
      Device: /dev/sdh

  # (7) Security Group permitindo acesso do usuário ao EC2
  MyEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Permitir acesso ao EC2
      VpcId: vpc-12345678   # Substitua pela VPC válida da sua conta
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22   # SSH
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80   # HTTP
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # Role para execução da Lambda:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaS3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub "${MyS3Bucket.Arn}/*"
              - Effect: Allow
                Action:
                  - ec2:DescribeInstances
                  - ec2:SendCommand
                Resource: "*"
